//
// File generated by rootcint at Fri Feb 23 22:10:00 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIFindMrdTracks_RootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "FindMrdTracks_RootDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::mrdcluster mrdcluster;
      #else
      class mrdcluster  {
         public:
         //friend XX;
         int clusterid; //
         int xmaxid; //
         int xminid; //
         int layer; //
         int altviewhalf; //
         vector< int > in_layer_tubeids; //
         vector< double > digittimes; //
         vector< int > digitindexes; //index of the digit within the WCSimRootTrigger
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::mrdcell mrdcell;
      #else
      class mrdcell  {
         public:
         //friend XX;
         int cellid; //
         pair< ::mrdcluster*, ::mrdcluster* > clusters; //! used in building the cell
         bool isdownstreamgoing; //is the track going upstream instead of downstream
         int status; //
         int utneighbourcellindex; //the up-track neighbour of this cell (*)
         int dtneighbourcellindex; //the down-track neighbour of this cell (*)
         int parentcellindex; //if the up-track cell has more than one downtrack neighbour, the track splits (*)
         bool hasdaughters; //so we can keep short tracks that have daughters (*)
         double neighbourchi2; //if we have more than one candidate, use the most aligned neighbour (*)
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void mrdcluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void mrdcluster_Dictionary();
   static void *new_mrdcluster(void *p = 0);
   static void *newArray_mrdcluster(Long_t size, void *p);
   static void delete_mrdcluster(void *p);
   static void deleteArray_mrdcluster(void *p);
   static void destruct_mrdcluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::mrdcluster*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::mrdcluster) == sizeof( ::ROOTShadow::Shadow::mrdcluster));
      ::mrdcluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::mrdcluster),0);
      static ::ROOT::TGenericClassInfo 
         instance("mrdcluster", "include/MrdCluster.hh", 9,
                  typeid(::mrdcluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &mrdcluster_ShowMembers, &mrdcluster_Dictionary, isa_proxy, 4,
                  sizeof(::mrdcluster) );
      instance.SetNew(&new_mrdcluster);
      instance.SetNewArray(&newArray_mrdcluster);
      instance.SetDelete(&delete_mrdcluster);
      instance.SetDeleteArray(&deleteArray_mrdcluster);
      instance.SetDestructor(&destruct_mrdcluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::mrdcluster*)
   {
      return GenerateInitInstanceLocal((::mrdcluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::mrdcluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void mrdcluster_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::mrdcluster*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void mrdcell_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void mrdcell_Dictionary();
   static void *new_mrdcell(void *p = 0);
   static void *newArray_mrdcell(Long_t size, void *p);
   static void delete_mrdcell(void *p);
   static void deleteArray_mrdcell(void *p);
   static void destruct_mrdcell(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::mrdcell*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::mrdcell) == sizeof( ::ROOTShadow::Shadow::mrdcell));
      ::mrdcell *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::mrdcell),0);
      static ::ROOT::TGenericClassInfo 
         instance("mrdcell", "include/MrdCell.hh", 11,
                  typeid(::mrdcell), ::ROOT::DefineBehavior(ptr, ptr),
                  &mrdcell_ShowMembers, &mrdcell_Dictionary, isa_proxy, 4,
                  sizeof(::mrdcell) );
      instance.SetNew(&new_mrdcell);
      instance.SetNewArray(&newArray_mrdcell);
      instance.SetDelete(&delete_mrdcell);
      instance.SetDeleteArray(&deleteArray_mrdcell);
      instance.SetDestructor(&destruct_mrdcell);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::mrdcell*)
   {
      return GenerateInitInstanceLocal((::mrdcell*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::mrdcell*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void mrdcell_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::mrdcell*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void cMRDTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_cMRDTrack(void *p = 0);
   static void *newArray_cMRDTrack(Long_t size, void *p);
   static void delete_cMRDTrack(void *p);
   static void deleteArray_cMRDTrack(void *p);
   static void destruct_cMRDTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::cMRDTrack*)
   {
      ::cMRDTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::cMRDTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("cMRDTrack", ::cMRDTrack::Class_Version(), "include/MRDTrackClass.hh", 24,
                  typeid(::cMRDTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::cMRDTrack::Dictionary, isa_proxy, 4,
                  sizeof(::cMRDTrack) );
      instance.SetNew(&new_cMRDTrack);
      instance.SetNewArray(&newArray_cMRDTrack);
      instance.SetDelete(&delete_cMRDTrack);
      instance.SetDeleteArray(&deleteArray_cMRDTrack);
      instance.SetDestructor(&destruct_cMRDTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::cMRDTrack*)
   {
      return GenerateInitInstanceLocal((::cMRDTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::cMRDTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void cMRDSubEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_cMRDSubEvent(void *p = 0);
   static void *newArray_cMRDSubEvent(Long_t size, void *p);
   static void delete_cMRDSubEvent(void *p);
   static void deleteArray_cMRDSubEvent(void *p);
   static void destruct_cMRDSubEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::cMRDSubEvent*)
   {
      ::cMRDSubEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::cMRDSubEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("cMRDSubEvent", ::cMRDSubEvent::Class_Version(), "include/MRDSubEventClass.hh", 21,
                  typeid(::cMRDSubEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::cMRDSubEvent::Dictionary, isa_proxy, 4,
                  sizeof(::cMRDSubEvent) );
      instance.SetNew(&new_cMRDSubEvent);
      instance.SetNewArray(&newArray_cMRDSubEvent);
      instance.SetDelete(&delete_cMRDSubEvent);
      instance.SetDeleteArray(&deleteArray_cMRDSubEvent);
      instance.SetDestructor(&destruct_cMRDSubEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::cMRDSubEvent*)
   {
      return GenerateInitInstanceLocal((::cMRDSubEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::cMRDSubEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace MRDSpecs {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void MRDSpecs_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("MRDSpecs", 0 /*version*/, "include/MRDspecs.hh", 12,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &MRDSpecs_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void MRDSpecs_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

//______________________________________________________________________________
atomic_TClass_ptr cMRDTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *cMRDTrack::Class_Name()
{
   return "cMRDTrack";
}

//______________________________________________________________________________
const char *cMRDTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::cMRDTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int cMRDTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::cMRDTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void cMRDTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::cMRDTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *cMRDTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::cMRDTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr cMRDSubEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *cMRDSubEvent::Class_Name()
{
   return "cMRDSubEvent";
}

//______________________________________________________________________________
const char *cMRDSubEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::cMRDSubEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int cMRDSubEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::cMRDSubEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void cMRDSubEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::cMRDSubEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *cMRDSubEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::cMRDSubEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOTDict {
   void mrdcluster_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class mrdcluster.
      typedef ::ROOTShadow::Shadow::mrdcluster ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::mrdcluster*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterid", &sobj->clusterid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xmaxid", &sobj->xmaxid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xminid", &sobj->xminid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &sobj->layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "altviewhalf", &sobj->altviewhalf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "in_layer_tubeids", (void*)&sobj->in_layer_tubeids);
      R__insp.InspectMember("vector<int>", (void*)&sobj->in_layer_tubeids, "in_layer_tubeids.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digittimes", (void*)&sobj->digittimes);
      R__insp.InspectMember("vector<double>", (void*)&sobj->digittimes, "digittimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digitindexes", (void*)&sobj->digitindexes);
      R__insp.InspectMember("vector<int>", (void*)&sobj->digitindexes, "digitindexes.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_mrdcluster(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mrdcluster : new ::mrdcluster;
   }
   static void *newArray_mrdcluster(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mrdcluster[nElements] : new ::mrdcluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_mrdcluster(void *p) {
      delete ((::mrdcluster*)p);
   }
   static void deleteArray_mrdcluster(void *p) {
      delete [] ((::mrdcluster*)p);
   }
   static void destruct_mrdcluster(void *p) {
      typedef ::mrdcluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::mrdcluster

//______________________________________________________________________________
namespace ROOTDict {
   void mrdcell_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class mrdcell.
      typedef ::ROOTShadow::Shadow::mrdcell ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::mrdcell*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellid", &sobj->cellid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusters", (void*)&sobj->clusters);
      R__insp.InspectMember("pair<mrdcluster*,mrdcluster*>", (void*)&sobj->clusters, "clusters.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isdownstreamgoing", &sobj->isdownstreamgoing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &sobj->status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "utneighbourcellindex", &sobj->utneighbourcellindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtneighbourcellindex", &sobj->dtneighbourcellindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentcellindex", &sobj->parentcellindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasdaughters", &sobj->hasdaughters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neighbourchi2", &sobj->neighbourchi2);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_mrdcell(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mrdcell : new ::mrdcell;
   }
   static void *newArray_mrdcell(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mrdcell[nElements] : new ::mrdcell[nElements];
   }
   // Wrapper around operator delete
   static void delete_mrdcell(void *p) {
      delete ((::mrdcell*)p);
   }
   static void deleteArray_mrdcell(void *p) {
      delete [] ((::mrdcell*)p);
   }
   static void destruct_mrdcell(void *p) {
      typedef ::mrdcell current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::mrdcell

//______________________________________________________________________________
void cMRDTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class cMRDTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(cMRDTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(cMRDTrack::Class(),this);
   }
}

//______________________________________________________________________________
void cMRDTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class cMRDTrack.
      TClass *R__cl = ::cMRDTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MRDtrackID", &MRDtrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tanktrackID", &tanktrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcsimfile", (void*)&wcsimfile);
      R__insp.InspectMember("string", (void*)&wcsimfile, "wcsimfile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_id", &run_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_id", &event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger", &trigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mrdsubevent_id", &mrdsubevent_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_ids", (void*)&digi_ids);
      R__insp.InspectMember("vector<Int_t>", (void*)&digi_ids, "digi_ids.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmts_hit", (void*)&pmts_hit);
      R__insp.InspectMember("vector<Int_t>", (void*)&pmts_hit, "pmts_hit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_qs", (void*)&digi_qs);
      R__insp.InspectMember("vector<Double_t>", (void*)&digi_qs, "digi_qs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_ts", (void*)&digi_ts);
      R__insp.InspectMember("vector<Double_t>", (void*)&digi_ts, "digi_ts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_numphots", (void*)&digi_numphots);
      R__insp.InspectMember("vector<Int_t>", (void*)&digi_numphots, "digi_numphots.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_phot_ts", (void*)&digi_phot_ts);
      R__insp.InspectMember("vector<Double_t>", (void*)&digi_phot_ts, "digi_phot_ts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_phot_parents", (void*)&digi_phot_parents);
      R__insp.InspectMember("vector<Int_t>", (void*)&digi_phot_parents, "digi_phot_parents.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layers_hit", (void*)&layers_hit);
      R__insp.InspectMember("vector<Int_t>", (void*)&layers_hit, "layers_hit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDepsInLayers", (void*)&eDepsInLayers);
      R__insp.InspectMember("vector<Double_t>", (void*)&eDepsInLayers, "eDepsInLayers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KEStart", &KEStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KEEnd", &KEEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mutracklengthinMRD", &mutracklengthinMRD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "penetrationdepth", &penetrationdepth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnergyLoss", &EnergyLoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnergyLossError", &EnergyLossError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particlePID", &particlePID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htrackclusters", (void*)&htrackclusters);
      R__insp.InspectMember("vector<mrdcluster>", (void*)&htrackclusters, "htrackclusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtrackclusters", (void*)&vtrackclusters);
      R__insp.InspectMember("vector<mrdcluster>", (void*)&vtrackclusters, "vtrackclusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htrackcells", (void*)&htrackcells);
      R__insp.InspectMember("vector<mrdcell>", (void*)&htrackcells, "htrackcells.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtrackcells", (void*)&vtrackcells);
      R__insp.InspectMember("vector<mrdcell>", (void*)&vtrackcells, "vtrackcells.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueTrackID", &trueTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extravpoints", (void*)&extravpoints);
      R__insp.InspectMember("vector<double>", (void*)&extravpoints, "extravpoints.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extravpointerrors", (void*)&extravpointerrors);
      R__insp.InspectMember("vector<double>", (void*)&extravpointerrors, "extravpointerrors.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extrahpoints", (void*)&extrahpoints);
      R__insp.InspectMember("vector<double>", (void*)&extrahpoints, "extrahpoints.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extrahpointerrors", (void*)&extrahpointerrors);
      R__insp.InspectMember("vector<double>", (void*)&extrahpointerrors, "extrahpointerrors.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extrazpoints", (void*)&extrazpoints);
      R__insp.InspectMember("vector<double>", (void*)&extrazpoints, "extrazpoints.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extrazpointerrors", (void*)&extrazpointerrors);
      R__insp.InspectMember("vector<double>", (void*)&extrazpointerrors, "extrazpointerrors.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htrackorigin", &htrackorigin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htrackoriginerror", &htrackoriginerror);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htrackgradient", &htrackgradient);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htrackgradienterror", &htrackgradienterror);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htrackfitchi2", &htrackfitchi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htrackfitcov", &htrackfitcov);
      R__insp.InspectMember(htrackfitcov, "htrackfitcov.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtrackorigin", &vtrackorigin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtrackoriginerror", &vtrackoriginerror);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtrackgradient", &vtrackgradient);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtrackgradienterror", &vtrackgradienterror);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtrackfitchi2", &vtrackfitchi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtrackfitcov", &vtrackfitcov);
      R__insp.InspectMember(vtrackfitcov, "vtrackfitcov.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackfitstart", &trackfitstart);
      R__insp.InspectMember(trackfitstart, "trackfitstart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackfitstop", &trackfitstop);
      R__insp.InspectMember(trackfitstop, "trackfitstop.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackangle", &trackangle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackangleerror", &trackangleerror);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ispenetrating", &ispenetrating);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isstopped", &isstopped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sideexit", &sideexit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mrdentrypoint", &mrdentrypoint);
      R__insp.InspectMember(mrdentrypoint, "mrdentrypoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mrdentryxbounds", (void*)&mrdentryxbounds);
      R__insp.InspectMember("pair<double,double>", (void*)&mrdentryxbounds, "mrdentryxbounds.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mrdentryybounds", (void*)&mrdentryybounds);
      R__insp.InspectMember("pair<double,double>", (void*)&mrdentryybounds, "mrdentryybounds.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "interceptstank", &interceptstank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "projectedtankexitpoint", &projectedtankexitpoint);
      R__insp.InspectMember(projectedtankexitpoint, "projectedtankexitpoint.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_cMRDTrack(void *p) {
      return  p ? new(p) ::cMRDTrack : new ::cMRDTrack;
   }
   static void *newArray_cMRDTrack(Long_t nElements, void *p) {
      return p ? new(p) ::cMRDTrack[nElements] : new ::cMRDTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_cMRDTrack(void *p) {
      delete ((::cMRDTrack*)p);
   }
   static void deleteArray_cMRDTrack(void *p) {
      delete [] ((::cMRDTrack*)p);
   }
   static void destruct_cMRDTrack(void *p) {
      typedef ::cMRDTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::cMRDTrack

//______________________________________________________________________________
void cMRDSubEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class cMRDSubEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(cMRDSubEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(cMRDSubEvent::Class(),this);
   }
}

//______________________________________________________________________________
void cMRDSubEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class cMRDSubEvent.
      TClass *R__cl = ::cMRDSubEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mrdsubevent_id", &mrdsubevent_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcsimfile", (void*)&wcsimfile);
      R__insp.InspectMember("string", (void*)&wcsimfile, "wcsimfile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_id", &run_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_id", &event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger", &trigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_ids", (void*)&digi_ids);
      R__insp.InspectMember("vector<Int_t>", (void*)&digi_ids, "digi_ids.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmts_hit", (void*)&pmts_hit);
      R__insp.InspectMember("vector<Int_t>", (void*)&pmts_hit, "pmts_hit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_qs", (void*)&digi_qs);
      R__insp.InspectMember("vector<Double_t>", (void*)&digi_qs, "digi_qs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_ts", (void*)&digi_ts);
      R__insp.InspectMember("vector<Double_t>", (void*)&digi_ts, "digi_ts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_numphots", (void*)&digi_numphots);
      R__insp.InspectMember("vector<Int_t>", (void*)&digi_numphots, "digi_numphots.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_phot_ts", (void*)&digi_phot_ts);
      R__insp.InspectMember("vector<Double_t>", (void*)&digi_phot_ts, "digi_phot_ts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digi_phot_parents", (void*)&digi_phot_parents);
      R__insp.InspectMember("vector<Int_t>", (void*)&digi_phot_parents, "digi_phot_parents.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "truetrackvertices", (void*)&truetrackvertices);
      R__insp.InspectMember("vector<std::pair<TVector3,TVector3> >", (void*)&truetrackvertices, "truetrackvertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "truetrackpdgs", (void*)&truetrackpdgs);
      R__insp.InspectMember("vector<Int_t>", (void*)&truetrackpdgs, "truetrackpdgs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tracksthissubevent", (void*)&tracksthissubevent);
      R__insp.InspectMember("vector<cMRDTrack>", (void*)&tracksthissubevent, "tracksthissubevent.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layers_hit", (void*)&layers_hit);
      R__insp.InspectMember("vector<Int_t>", (void*)&layers_hit, "layers_hit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eDepsInLayers", (void*)&eDepsInLayers);
      R__insp.InspectMember("vector<Double_t>", (void*)&eDepsInLayers, "eDepsInLayers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xupcorner1", (void*)&xupcorner1);
      R__insp.InspectMember("pair<double,double>", (void*)&xupcorner1, "xupcorner1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xupcorner2", (void*)&xupcorner2);
      R__insp.InspectMember("pair<double,double>", (void*)&xupcorner2, "xupcorner2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xdowncorner1", (void*)&xdowncorner1);
      R__insp.InspectMember("pair<double,double>", (void*)&xdowncorner1, "xdowncorner1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xdowncorner2", (void*)&xdowncorner2);
      R__insp.InspectMember("pair<double,double>", (void*)&xdowncorner2, "xdowncorner2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yupcorner1", (void*)&yupcorner1);
      R__insp.InspectMember("pair<double,double>", (void*)&yupcorner1, "yupcorner1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yupcorner2", (void*)&yupcorner2);
      R__insp.InspectMember("pair<double,double>", (void*)&yupcorner2, "yupcorner2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ydowncorner1", (void*)&ydowncorner1);
      R__insp.InspectMember("pair<double,double>", (void*)&ydowncorner1, "ydowncorner1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ydowncorner2", (void*)&ydowncorner2);
      R__insp.InspectMember("pair<double,double>", (void*)&ydowncorner2, "ydowncorner2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackfitarrows", (void*)&trackfitarrows);
      R__insp.InspectMember("vector<TArrow*>", (void*)&trackfitarrows, "trackfitarrows.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackarrows", (void*)&trackarrows);
      R__insp.InspectMember("vector<TArrow*>", (void*)&trackarrows, "trackarrows.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "truetrackarrows", (void*)&truetrackarrows);
      R__insp.InspectMember("vector<TArrow*>", (void*)&truetrackarrows, "truetrackarrows.", true);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_cMRDSubEvent(void *p) {
      return  p ? new(p) ::cMRDSubEvent : new ::cMRDSubEvent;
   }
   static void *newArray_cMRDSubEvent(Long_t nElements, void *p) {
      return p ? new(p) ::cMRDSubEvent[nElements] : new ::cMRDSubEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_cMRDSubEvent(void *p) {
      delete ((::cMRDSubEvent*)p);
   }
   static void deleteArray_cMRDSubEvent(void *p) {
      delete [] ((::cMRDSubEvent*)p);
   }
   static void destruct_cMRDSubEvent(void *p) {
      typedef ::cMRDSubEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::cMRDSubEvent

namespace ROOTDict {
   void vectorlEcMRDTrackgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEcMRDTrackgR_Dictionary();
   static void *new_vectorlEcMRDTrackgR(void *p = 0);
   static void *newArray_vectorlEcMRDTrackgR(Long_t size, void *p);
   static void delete_vectorlEcMRDTrackgR(void *p);
   static void deleteArray_vectorlEcMRDTrackgR(void *p);
   static void destruct_vectorlEcMRDTrackgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<cMRDTrack>*)
   {
      vector<cMRDTrack> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<cMRDTrack>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<cMRDTrack>", -2, "/ToolAnalysis/ToolDAQ/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<cMRDTrack>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEcMRDTrackgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<cMRDTrack>) );
      instance.SetNew(&new_vectorlEcMRDTrackgR);
      instance.SetNewArray(&newArray_vectorlEcMRDTrackgR);
      instance.SetDelete(&delete_vectorlEcMRDTrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlEcMRDTrackgR);
      instance.SetDestructor(&destruct_vectorlEcMRDTrackgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<cMRDTrack> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<cMRDTrack>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEcMRDTrackgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<cMRDTrack>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEcMRDTrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<cMRDTrack> : new vector<cMRDTrack>;
   }
   static void *newArray_vectorlEcMRDTrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<cMRDTrack>[nElements] : new vector<cMRDTrack>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEcMRDTrackgR(void *p) {
      delete ((vector<cMRDTrack>*)p);
   }
   static void deleteArray_vectorlEcMRDTrackgR(void *p) {
      delete [] ((vector<cMRDTrack>*)p);
   }
   static void destruct_vectorlEcMRDTrackgR(void *p) {
      typedef vector<cMRDTrack> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<cMRDTrack>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/ToolAnalysis/ToolDAQ/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEmrdcellgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEmrdcellgR_Dictionary();
   static void *new_vectorlEmrdcellgR(void *p = 0);
   static void *newArray_vectorlEmrdcellgR(Long_t size, void *p);
   static void delete_vectorlEmrdcellgR(void *p);
   static void deleteArray_vectorlEmrdcellgR(void *p);
   static void destruct_vectorlEmrdcellgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<mrdcell>*)
   {
      vector<mrdcell> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<mrdcell>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<mrdcell>", -2, "/ToolAnalysis/ToolDAQ/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<mrdcell>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEmrdcellgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<mrdcell>) );
      instance.SetNew(&new_vectorlEmrdcellgR);
      instance.SetNewArray(&newArray_vectorlEmrdcellgR);
      instance.SetDelete(&delete_vectorlEmrdcellgR);
      instance.SetDeleteArray(&deleteArray_vectorlEmrdcellgR);
      instance.SetDestructor(&destruct_vectorlEmrdcellgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<mrdcell> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<mrdcell>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEmrdcellgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<mrdcell>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEmrdcellgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<mrdcell> : new vector<mrdcell>;
   }
   static void *newArray_vectorlEmrdcellgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<mrdcell>[nElements] : new vector<mrdcell>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEmrdcellgR(void *p) {
      delete ((vector<mrdcell>*)p);
   }
   static void deleteArray_vectorlEmrdcellgR(void *p) {
      delete [] ((vector<mrdcell>*)p);
   }
   static void destruct_vectorlEmrdcellgR(void *p) {
      typedef vector<mrdcell> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<mrdcell>

namespace ROOTDict {
   void vectorlEmrdclustergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEmrdclustergR_Dictionary();
   static void *new_vectorlEmrdclustergR(void *p = 0);
   static void *newArray_vectorlEmrdclustergR(Long_t size, void *p);
   static void delete_vectorlEmrdclustergR(void *p);
   static void deleteArray_vectorlEmrdclustergR(void *p);
   static void destruct_vectorlEmrdclustergR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<mrdcluster>*)
   {
      vector<mrdcluster> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<mrdcluster>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<mrdcluster>", -2, "/ToolAnalysis/ToolDAQ/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<mrdcluster>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEmrdclustergR_Dictionary, isa_proxy, 0,
                  sizeof(vector<mrdcluster>) );
      instance.SetNew(&new_vectorlEmrdclustergR);
      instance.SetNewArray(&newArray_vectorlEmrdclustergR);
      instance.SetDelete(&delete_vectorlEmrdclustergR);
      instance.SetDeleteArray(&deleteArray_vectorlEmrdclustergR);
      instance.SetDestructor(&destruct_vectorlEmrdclustergR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<mrdcluster> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<mrdcluster>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEmrdclustergR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<mrdcluster>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEmrdclustergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<mrdcluster> : new vector<mrdcluster>;
   }
   static void *newArray_vectorlEmrdclustergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<mrdcluster>[nElements] : new vector<mrdcluster>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEmrdclustergR(void *p) {
      delete ((vector<mrdcluster>*)p);
   }
   static void deleteArray_vectorlEmrdclustergR(void *p) {
      delete [] ((vector<mrdcluster>*)p);
   }
   static void destruct_vectorlEmrdclustergR(void *p) {
      typedef vector<mrdcluster> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<mrdcluster>

namespace ROOTDict {
   void vectorlEpairlETVector3cOTVector3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlETVector3cOTVector3gRsPgR_Dictionary();
   static void *new_vectorlEpairlETVector3cOTVector3gRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlETVector3cOTVector3gRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlETVector3cOTVector3gRsPgR(void *p);
   static void deleteArray_vectorlEpairlETVector3cOTVector3gRsPgR(void *p);
   static void destruct_vectorlEpairlETVector3cOTVector3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<TVector3,TVector3> >*)
   {
      vector<pair<TVector3,TVector3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<TVector3,TVector3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<TVector3,TVector3> >", -2, "/ToolAnalysis/ToolDAQ/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<TVector3,TVector3> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlETVector3cOTVector3gRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<TVector3,TVector3> >) );
      instance.SetNew(&new_vectorlEpairlETVector3cOTVector3gRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlETVector3cOTVector3gRsPgR);
      instance.SetDelete(&delete_vectorlEpairlETVector3cOTVector3gRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlETVector3cOTVector3gRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlETVector3cOTVector3gRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<pair<TVector3,TVector3> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<TVector3,TVector3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlETVector3cOTVector3gRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<pair<TVector3,TVector3> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEpairlETVector3cOTVector3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<TVector3,TVector3> > : new vector<pair<TVector3,TVector3> >;
   }
   static void *newArray_vectorlEpairlETVector3cOTVector3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<TVector3,TVector3> >[nElements] : new vector<pair<TVector3,TVector3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlETVector3cOTVector3gRsPgR(void *p) {
      delete ((vector<pair<TVector3,TVector3> >*)p);
   }
   static void deleteArray_vectorlEpairlETVector3cOTVector3gRsPgR(void *p) {
      delete [] ((vector<pair<TVector3,TVector3> >*)p);
   }
   static void destruct_vectorlEpairlETVector3cOTVector3gRsPgR(void *p) {
      typedef vector<pair<TVector3,TVector3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<pair<TVector3,TVector3> >

/********************************************************
* src/FindMrdTracks_RootDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableFindMrdTracks_RootDict();

extern "C" void G__set_cpp_environmentFindMrdTracks_RootDict() {
  G__cpp_reset_tagtableFindMrdTracks_RootDict();
}
#include <new>
extern "C" int G__cpp_dllrevFindMrdTracks_RootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* mrdcluster */
static int G__FindMrdTracks_RootDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mrdcluster*) G__getstructoffset())->AddDigit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mrdcluster*) G__getstructoffset())->GetCentreIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mrdcluster*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mrdcluster*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mrdcluster*) G__getstructoffset())->GetCentre());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mrdcluster*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mrdcluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new mrdcluster(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) mrdcluster(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mrdcluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new mrdcluster[n];
     } else {
       p = new((void*) gvp) mrdcluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new mrdcluster;
     } else {
       p = new((void*) gvp) mrdcluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FindMrdTracks_RootDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   mrdcluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new mrdcluster(*(mrdcluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef mrdcluster G__Tmrdcluster;
static int G__FindMrdTracks_RootDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (mrdcluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((mrdcluster*) (soff+(sizeof(mrdcluster)*i)))->~G__Tmrdcluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (mrdcluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((mrdcluster*) (soff))->~G__Tmrdcluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FindMrdTracks_RootDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mrdcluster* dest = (mrdcluster*) G__getstructoffset();
   *dest = *(mrdcluster*) libp->para[0].ref;
   const mrdcluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* mrdcell */
static int G__FindMrdTracks_RootDict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mrdcell*) G__getstructoffset())->IncrementStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mrdcell*) G__getstructoffset())->SetClusterAddresses(*(vector<mrdcluster>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mrdcell* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new mrdcell((mrdcluster*) G__int(libp->para[0]), (mrdcluster*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) mrdcell((mrdcluster*) G__int(libp->para[0]), (mrdcluster*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mrdcell* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new mrdcell(*(mrdcell*) libp->para[0].ref, (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) mrdcell(*(mrdcell*) libp->para[0].ref, (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mrdcell* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new mrdcell[n];
     } else {
       p = new((void*) gvp) mrdcell[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new mrdcell;
     } else {
       p = new((void*) gvp) mrdcell;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FindMrdTracks_RootDict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   mrdcell* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new mrdcell(*(mrdcell*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef mrdcell G__Tmrdcell;
static int G__FindMrdTracks_RootDict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (mrdcell*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((mrdcell*) (soff+(sizeof(mrdcell)*i)))->~G__Tmrdcell();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (mrdcell*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((mrdcell*) (soff))->~G__Tmrdcell();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* cMRDTrack */
static int G__FindMrdTracks_RootDict_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetTankTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((cMRDTrack*) G__getstructoffset())->GetFile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetMrdSubEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetNumDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetNumLayersHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetNumPMTsHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDTrack*) G__getstructoffset())->GetDigitIds();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((cMRDTrack*) G__getstructoffset())->GetDigitQs();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((cMRDTrack*) G__getstructoffset())->GetDigitTs();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDTrack*) G__getstructoffset())->GetDigiNumPhots();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((cMRDTrack*) G__getstructoffset())->GetDigiPhotTs();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDTrack*) G__getstructoffset())->GetDigiPhotParents();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDTrack*) G__getstructoffset())->GetLayersHit();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDTrack*) G__getstructoffset())->GetPMTsHit();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((cMRDTrack*) G__getstructoffset())->GetEdeps();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetKEStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetKEEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetTotalEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetParticlePID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetTrackAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetTrackAngleError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->GetAngleAndOffset((int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<double,double>* pobj;
         pair<double,double> xobj = ((cMRDTrack*) G__getstructoffset())->CalculateCovariantError((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, *((TMatrixDSym*) G__int(libp->para[2])), (bool) G__int(libp->para[3]));
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->CalculateCovariantError((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, *((TMatrixDSym*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((cMRDTrack*) G__getstructoffset())->GetMrdEntryPoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<double,double>* pobj;
         pair<double,double> xobj = ((cMRDTrack*) G__getstructoffset())->GetMrdEntryBoundsX();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<double,double>* pobj;
         pair<double,double> xobj = ((cMRDTrack*) G__getstructoffset())->GetMrdEntryBoundsY();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((cMRDTrack*) G__getstructoffset())->GetInterceptsTank());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((cMRDTrack*) G__getstructoffset())->GetTankExitPoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((cMRDTrack*) G__getstructoffset())->GetStartVertex();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((cMRDTrack*) G__getstructoffset())->GetStopVertex();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetTrackLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetEnergyLoss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetEnergyLossError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((cMRDTrack*) G__getstructoffset())->GetIsPenetrating());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((cMRDTrack*) G__getstructoffset())->GetIsStopped());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((cMRDTrack*) G__getstructoffset())->GetIsSideExit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->GetProjectionLimits((double) G__double(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((cMRDTrack*) G__getstructoffset())->GetProjectedPoint((double) G__double(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetPenetrationDepth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetHtrackOrigin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetHtrackOriginError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetHtrackGradient());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetHtrackGradientError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetHtrackFitChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((cMRDTrack*) G__getstructoffset())->GetHtrackFitCov();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetVtrackOrigin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetVtrackOriginError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetVtrackGradient());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetVtrackGradientError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetVtrackFitChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((cMRDTrack*) G__getstructoffset())->GetVtrackFitCov();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->TestCovarianceErrorCalc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->DrawReco((TCanvas*) G__int(libp->para[0]), *(vector<TArrow*>*) libp->para[1].ref
, (EColor) G__int(libp->para[2]), *((vector<TBox*>*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->DrawFit((TCanvas*) G__int(libp->para[0]), *(vector<TArrow*>*) libp->para[1].ref
, (EColor) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->Print2();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDTrack*) G__getstructoffset())->GetTrueTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->SetTankTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->AddTrackPoint(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->DoReconstruction();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((cMRDTrack*) G__getstructoffset())->CheckTankIntercept((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (TVector3*) G__int(libp->para[4]), (TVector3*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((cMRDTrack*) G__getstructoffset())->CheckTankIntercept((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((cMRDTrack*) G__getstructoffset())->GetClosestApproach(*((TVector3*) G__int(libp->para[0])), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((cMRDTrack*) G__getstructoffset())->GetClosestPoint(*((TVector3*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->DoTGraphErrorsFit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->CheckIfStopping();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->CalculateEnergyLoss();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   cMRDTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new cMRDTrack[n];
     } else {
       p = new((void*) gvp) cMRDTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new cMRDTrack;
     } else {
       p = new((void*) gvp) cMRDTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   cMRDTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 17
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new cMRDTrack(
(Int_t) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, *((vector<Int_t>*) G__int(libp->para[6])), *((vector<Int_t>*) G__int(libp->para[7]))
, *((vector<Double_t>*) G__int(libp->para[8])), *((vector<Double_t>*) G__int(libp->para[9]))
, *((vector<Int_t>*) G__int(libp->para[10])), *((vector<Double_t>*) G__int(libp->para[11]))
, *((vector<Int_t>*) G__int(libp->para[12])), *((vector<mrdcell>*) G__int(libp->para[13]))
, *((vector<mrdcell>*) G__int(libp->para[14])), *((vector<mrdcluster>*) G__int(libp->para[15]))
, *((vector<mrdcluster>*) G__int(libp->para[16])));
   } else {
     p = new((void*) gvp) cMRDTrack(
(Int_t) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, *((vector<Int_t>*) G__int(libp->para[6])), *((vector<Int_t>*) G__int(libp->para[7]))
, *((vector<Double_t>*) G__int(libp->para[8])), *((vector<Double_t>*) G__int(libp->para[9]))
, *((vector<Int_t>*) G__int(libp->para[10])), *((vector<Double_t>*) G__int(libp->para[11]))
, *((vector<Int_t>*) G__int(libp->para[12])), *((vector<mrdcell>*) G__int(libp->para[13]))
, *((vector<mrdcell>*) G__int(libp->para[14])), *((vector<mrdcluster>*) G__int(libp->para[15]))
, *((vector<mrdcluster>*) G__int(libp->para[16])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   cMRDTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new cMRDTrack(*(cMRDTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) cMRDTrack(*(cMRDTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) cMRDTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) cMRDTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) cMRDTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      cMRDTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) cMRDTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) cMRDTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) cMRDTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_174_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) cMRDTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef cMRDTrack G__TcMRDTrack;
static int G__FindMrdTracks_RootDict_174_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (cMRDTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((cMRDTrack*) (soff+(sizeof(cMRDTrack)*i)))->~G__TcMRDTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (cMRDTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((cMRDTrack*) (soff))->~G__TcMRDTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* cMRDSubEvent */
static int G__FindMrdTracks_RootDict_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDSubEvent*) G__getstructoffset())->GetSubEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((cMRDSubEvent*) G__getstructoffset())->GetFile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDSubEvent*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDSubEvent*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDSubEvent*) G__getstructoffset())->GetTrigger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDSubEvent*) G__getstructoffset())->GetNumDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDSubEvent*) G__getstructoffset())->GetNumLayersHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((cMRDSubEvent*) G__getstructoffset())->GetNumPMTsHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetDigitIds();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetDigitQs();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetDigitTs();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetDigiNumPhots();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetDigiPhotTs();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetDigiPhotParents();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetLayersHit();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetPMTsHit();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::pair<TVector3,TVector3> >* pobj;
         vector<std::pair<TVector3,TVector3> > xobj = ((cMRDSubEvent*) G__getstructoffset())->GetTrueTrackVertices();
         pobj = new vector<std::pair<TVector3,TVector3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetTrueTrackPdgs();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((cMRDSubEvent*) G__getstructoffset())->GetTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetEdeps();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TArrow*>* pobj;
         vector<TArrow*> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetTrackArrows();
         pobj = new vector<TArrow*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TArrow*>* pobj;
         vector<TArrow*> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetTrueTrackArrows();
         pobj = new vector<TArrow*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TArrow*>* pobj;
         vector<TArrow*> xobj = ((cMRDSubEvent*) G__getstructoffset())->GetTrackFitArrows();
         pobj = new vector<TArrow*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDSubEvent*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   cMRDSubEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new cMRDSubEvent[n];
     } else {
       p = new((void*) gvp) cMRDSubEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new cMRDSubEvent;
     } else {
       p = new((void*) gvp) cMRDSubEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   cMRDSubEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 14
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new cMRDSubEvent(
(Int_t) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), *((vector<Int_t>*) G__int(libp->para[5]))
, *((vector<Int_t>*) G__int(libp->para[6])), *((vector<Double_t>*) G__int(libp->para[7]))
, *((vector<Double_t>*) G__int(libp->para[8])), *((vector<Int_t>*) G__int(libp->para[9]))
, *((vector<Double_t>*) G__int(libp->para[10])), *((vector<Int_t>*) G__int(libp->para[11]))
, *((vector<std::pair<TVector3,TVector3> >*) G__int(libp->para[12])), *((vector<Int_t>*) G__int(libp->para[13])));
   } else {
     p = new((void*) gvp) cMRDSubEvent(
(Int_t) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), *((vector<Int_t>*) G__int(libp->para[5]))
, *((vector<Int_t>*) G__int(libp->para[6])), *((vector<Double_t>*) G__int(libp->para[7]))
, *((vector<Double_t>*) G__int(libp->para[8])), *((vector<Int_t>*) G__int(libp->para[9]))
, *((vector<Double_t>*) G__int(libp->para[10])), *((vector<Int_t>*) G__int(libp->para[11]))
, *((vector<std::pair<TVector3,TVector3> >*) G__int(libp->para[12])), *((vector<Int_t>*) G__int(libp->para[13])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDSubEvent*) G__getstructoffset())->DrawMrdCanvases();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDSubEvent*) G__getstructoffset())->DrawTrueTracks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDSubEvent*) G__getstructoffset())->DrawTracks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDSubEvent*) G__getstructoffset())->ComputePaddleTransformation((const Int_t) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref
, *(Bool_t*) G__Boolref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDSubEvent*) G__getstructoffset())->RemoveArrows();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDSubEvent*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) cMRDSubEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) cMRDSubEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) cMRDSubEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      cMRDSubEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((cMRDSubEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) cMRDSubEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) cMRDSubEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) cMRDSubEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FindMrdTracks_RootDict_183_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) cMRDSubEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FindMrdTracks_RootDict_183_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   cMRDSubEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new cMRDSubEvent(*(cMRDSubEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef cMRDSubEvent G__TcMRDSubEvent;
static int G__FindMrdTracks_RootDict_183_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (cMRDSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((cMRDSubEvent*) (soff+(sizeof(cMRDSubEvent)*i)))->~G__TcMRDSubEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (cMRDSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((cMRDSubEvent*) (soff))->~G__TcMRDSubEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MRDSpecs */

/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* mrdcluster */

/* mrdcell */

/* cMRDTrack */

/* cMRDSubEvent */

/* MRDSpecs */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncFindMrdTracks_RootDict {
 public:
  G__Sizep2memfuncFindMrdTracks_RootDict(): p(&G__Sizep2memfuncFindMrdTracks_RootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncFindMrdTracks_RootDict::*p)();
};

size_t G__get_sizep2memfuncFindMrdTracks_RootDict()
{
  G__Sizep2memfuncFindMrdTracks_RootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceFindMrdTracks_RootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack))) {
     cMRDTrack *G__Lderived;
     G__Lderived=(cMRDTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack),G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent))) {
     cMRDSubEvent *G__Lderived;
     G__Lderived=(cMRDSubEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent),G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableFindMrdTracks_RootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<TVector3,TVector3> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<TVector3,TVector3> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<TVector3,TVector3> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<cMRDTrack>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArrow*>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETArrowmUcOallocatorlETArrowmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETArrowmUcOallocatorlETArrowmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<mrdcell*>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<int,int> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<mrdcell*> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<mrdcell*> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<mrdcell*,allocator<mrdcell*> > >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TBox*>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETBoxmUcOallocatorlETBoxmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETBoxmUcOallocatorlETBoxmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETBoxmUcOallocatorlETBoxmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETBoxmUcOallocatorlETBoxmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETBoxmUcOallocatorlETBoxmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<EColor>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEEColorcOallocatorlEEColorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEEColorcOallocatorlEEColorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEEColorcOallocatorlEEColorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEEColorcOallocatorlEEColorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEEColorcOallocatorlEEColorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<mrdcluster>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdclustercOallocatorlEmrdclustergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdclustercOallocatorlEmrdclustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdclustercOallocatorlEmrdclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdclustercOallocatorlEmrdclustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdclustercOallocatorlEmrdclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<double,double> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<double,double> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<double,double> >",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<mrdcell>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellcOallocatorlEmrdcellgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellcOallocatorlEmrdcellgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellcOallocatorlEmrdcellgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellcOallocatorlEmrdcellgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellcOallocatorlEmrdcellgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* mrdcluster */
static void G__setup_memvarmrdcluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcluster));
   { mrdcluster *p; p=(mrdcluster*)0x1000; if (p) { }
   G__memvar_setup((void*)(&mrdcluster::clustercounter),105,0,0,-1,-1,-2,1,"clustercounter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->clusterid)-(long)(p)),105,0,0,-1,-1,-1,1,"clusterid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xmaxid)-(long)(p)),105,0,0,-1,-1,-1,1,"xmaxid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xminid)-(long)(p)),105,0,0,-1,-1,-1,1,"xminid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->layer)-(long)(p)),105,0,0,-1,-1,-1,1,"layer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->altviewhalf)-(long)(p)),105,0,0,-1,-1,-1,1,"altviewhalf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->in_layer_tubeids)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"in_layer_tubeids=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->digittimes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"digittimes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->digitindexes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"digitindexes=",0,"index of the digit within the WCSimRootTrigger");
   }
   G__tag_memvar_reset();
}


   /* mrdcell */
static void G__setup_memvarmrdcell(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell));
   { mrdcell *p; p=(mrdcell*)0x1000; if (p) { }
   G__memvar_setup((void*)(&mrdcell::cellcounter),105,0,0,-1,-1,-2,1,"cellcounter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cellid)-(long)(p)),105,0,0,-1,-1,-1,1,"cellid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEmrdclustermUcOmrdclustermUgR),-1,-1,1,"clusters=",0,"! used in building the cell");
   G__memvar_setup((void*)((long)(&p->isdownstreamgoing)-(long)(p)),103,0,0,-1,-1,-1,1,"isdownstreamgoing=",0,"is the track going upstream instead of downstream");
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),105,0,0,-1,-1,-1,1,"status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->utneighbourcellindex)-(long)(p)),105,0,0,-1,-1,-1,1,"utneighbourcellindex=",0,"the up-track neighbour of this cell (*)");
   G__memvar_setup((void*)((long)(&p->dtneighbourcellindex)-(long)(p)),105,0,0,-1,-1,-1,1,"dtneighbourcellindex=",0,"the down-track neighbour of this cell (*)");
   G__memvar_setup((void*)((long)(&p->parentcellindex)-(long)(p)),105,0,0,-1,-1,-1,1,"parentcellindex=",0,"if the up-track cell has more than one downtrack neighbour, the track splits (*)");
   G__memvar_setup((void*)((long)(&p->hasdaughters)-(long)(p)),103,0,0,-1,-1,-1,1,"hasdaughters=",0,"so we can keep short tracks that have daughters (*)");
   G__memvar_setup((void*)((long)(&p->neighbourchi2)-(long)(p)),100,0,0,-1,-1,-1,1,"neighbourchi2=",0,"if we have more than one candidate, use the most aligned neighbour (*)");
   }
   G__tag_memvar_reset();
}


   /* cMRDTrack */
static void G__setup_memvarcMRDTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack));
   { cMRDTrack *p; p=(cMRDTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MRDtrackID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"MRDtrackID=",0,"ID of this track within the trigger");
   G__memvar_setup((void*)((long)(&p->tanktrackID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tanktrackID=",0,"correlated tank track within the trigger");
   G__memvar_setup((void*)((long)(&p->wcsimfile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_string),-1,-1,1,"wcsimfile=",0,"which wcsim file this was in");
   G__memvar_setup((void*)((long)(&p->run_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run_id=",0,"which run this file was in TODO all 0");
   G__memvar_setup((void*)((long)(&p->event_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"event_id=",0,"which event this track was in");
   G__memvar_setup((void*)((long)(&p->trigger)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trigger=",0,"which (sub)trigger this track was in TODO? all 1");
   G__memvar_setup((void*)((long)(&p->mrdsubevent_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mrdsubevent_id=",0,"which subevent this track was in");
   G__memvar_setup((void*)((long)(&p->digi_ids)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"digi_ids=",0,"vector of digi ids: GetCrnkvDigiHits()->At(digi_ids.at(i)) TODO v");
   G__memvar_setup((void*)((long)(&p->pmts_hit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"pmts_hit=",0,"vector of PMT IDs TODO empty");
   G__memvar_setup((void*)((long)(&p->digi_qs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"digi_qs=",0,"vector of digit charges TODO empty");
   G__memvar_setup((void*)((long)(&p->digi_ts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"digi_ts=",0,"vector of digit times TODO empty");
   G__memvar_setup((void*)((long)(&p->digi_numphots)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"digi_numphots=",0,"number of true photons for each digit TODO empty");
   G__memvar_setup((void*)((long)(&p->digi_phot_ts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"digi_phot_ts=",0,"true hit times of photons in a digit TODO empty");
   G__memvar_setup((void*)((long)(&p->digi_phot_parents)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"digi_phot_parents=",0,"wcsim track IDs of parents that provided photons for a digit TODO");
   G__memvar_setup((void*)((long)(&p->layers_hit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"layers_hit=",0,"vector of MRD layers hit TODO empty");
   G__memvar_setup((void*)((long)(&p->eDepsInLayers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"eDepsInLayers=",0,"fixed length vector of energy deposited in each layer TODO empty");
   G__memvar_setup((void*)((long)(&p->KEStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"KEStart=",0,"from depth or estimate if fully penetrating - TODO calculate");
   G__memvar_setup((void*)((long)(&p->KEEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"KEEnd=",0,"0 for stopping, or estimate if fully penetrating TODO cannot know?");
   G__memvar_setup((void*)((long)(&p->mutracklengthinMRD)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mutracklengthinMRD=",0,"absolute track length from front to end, from track fit");
   G__memvar_setup((void*)((long)(&p->penetrationdepth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"penetrationdepth=",0,"z component of penetration: start of MRD to last hit paddle's z.");
   G__memvar_setup((void*)((long)(&p->EnergyLoss)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"EnergyLoss=",0,"based on penetration");
   G__memvar_setup((void*)((long)(&p->EnergyLossError)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"EnergyLossError=",0,"based on error in angle and impact on dE/dx");
   G__memvar_setup((void*)((long)(&p->particlePID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"particlePID=",0,"estimated PID");
   G__memvar_setup((void*)((long)(&p->htrackclusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdclustercOallocatorlEmrdclustergRsPgR),G__defined_typename("vector<mrdcluster>"),-1,1,"htrackclusters=",0,"generated by CA algorithm, used for printing and drawing");
   G__memvar_setup((void*)((long)(&p->vtrackclusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdclustercOallocatorlEmrdclustergRsPgR),G__defined_typename("vector<mrdcluster>"),-1,1,"vtrackclusters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->htrackcells)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellcOallocatorlEmrdcellgRsPgR),G__defined_typename("vector<mrdcell>"),-1,1,"htrackcells=",0,"cells between horizontally aligned paddles");
   G__memvar_setup((void*)((long)(&p->vtrackcells)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellcOallocatorlEmrdcellgRsPgR),G__defined_typename("vector<mrdcell>"),-1,1,"vtrackcells=",0,"vertically ");
   G__memvar_setup((void*)((long)(&p->trueTrackID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trueTrackID=",0,"index in the WCSimRootTrack clones array TODO fill");
   G__memvar_setup((void*)((long)(&p->extravpoints)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"extravpoints=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->extravpointerrors)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"extravpointerrors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->extrahpoints)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"extrahpoints=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->extrahpointerrors)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"extrahpointerrors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->extrazpoints)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"extrazpoints=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->extrazpointerrors)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"extrazpointerrors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->htrackorigin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"htrackorigin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->htrackoriginerror)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"htrackoriginerror=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->htrackgradient)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"htrackgradient=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->htrackgradienterror)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"htrackgradienterror=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->htrackfitchi2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"htrackfitchi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->htrackfitcov)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,1,"htrackfitcov=",0,"it's necessary to specify the dimensionality when constructing!!!!");
   G__memvar_setup((void*)((long)(&p->vtrackorigin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vtrackorigin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtrackoriginerror)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vtrackoriginerror=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtrackgradient)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vtrackgradient=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtrackgradienterror)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vtrackgradienterror=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtrackfitchi2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vtrackfitchi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtrackfitcov)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,1,"vtrackfitcov=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackfitstart)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3),-1,-1,1,"trackfitstart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackfitstop)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3),-1,-1,1,"trackfitstop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackangle)-(long)(p)),100,0,0,-1,-1,-1,1,"trackangle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackangleerror)-(long)(p)),100,0,0,-1,-1,-1,1,"trackangleerror=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ispenetrating)-(long)(p)),103,0,0,-1,-1,-1,1,"ispenetrating=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isstopped)-(long)(p)),103,0,0,-1,-1,-1,1,"isstopped=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sideexit)-(long)(p)),103,0,0,-1,-1,-1,1,"sideexit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mrdentrypoint)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3),-1,-1,1,"mrdentrypoint=",0,"this is the start point of the fit, not projected to MRD start");
   G__memvar_setup((void*)((long)(&p->mrdentryxbounds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,1,"mrdentryxbounds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mrdentryybounds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,1,"mrdentryybounds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->interceptstank)-(long)(p)),103,0,0,-1,-1,-1,1,"interceptstank=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->projectedtankexitpoint)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3),-1,-1,1,"projectedtankexitpoint=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fillstaticmembers=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TF1),-1,-2,4,"MRDenergyvspenetration=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* cMRDSubEvent */
static void G__setup_memvarcMRDSubEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent));
   { cMRDSubEvent *p; p=(cMRDSubEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mrdsubevent_id=",0,"ID of this track within the trigger");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_string),-1,-1,4,"wcsimfile=",0,"which wcsim file this was in");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"run_id=",0,"which run this file was in  FIXME is same as mrdsubevent_id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"event_id=",0,"which event this track was in");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trigger=",0,"which (sub)trigger this track was in FIXME loads -1s/1's, no 0s");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"digi_ids=",0,"vector of digi ids: GetCherenkovDigiHits()->At(digi_ids.at(i))");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"pmts_hit=",0,"vector of PMT IDs hit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"digi_qs=",0,"vector of digit charges");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"digi_ts=",0,"vector of digit times");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"digi_numphots=",0,"number of true photons for each digit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"digi_phot_ts=",0,"true hit times of photons in a digit FIXME some up to -2000???");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"digi_phot_parents=",0,"wcsim track IDs of parents that provided photons for a digit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR),G__defined_typename("vector<std::pair<TVector3,TVector3> >"),-1,4,"truetrackvertices=",0,"start and endpoints.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"truetrackpdgs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgR),G__defined_typename("vector<cMRDTrack>"),-1,4,"tracksthissubevent=",0,"tracks created this SubEvent");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"layers_hit=",0,"vector of layers hit TODO currently empty");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"eDepsInLayers=",0,"fixed len vector of energy deposition in each layer TODO");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,4,"xupcorner1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,4,"xupcorner2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,4,"xdowncorner1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,4,"xdowncorner2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,4,"yupcorner1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,4,"yupcorner2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,4,"ydowncorner1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR),-1,-1,4,"ydowncorner2=",0,"TODO remove me, probably can just be defined in makemrdimage.cxx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR),G__defined_typename("vector<TArrow*>"),-1,4,"trackfitarrows=",0,"!  stores TLines which are associated with track boundaries");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR),G__defined_typename("vector<TArrow*>"),-1,4,"trackarrows=",0,"!  stores TArrows associated with CA reconstructed tracks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR),G__defined_typename("vector<TArrow*>"),-1,4,"truetrackarrows=",0,"!  stores TArrows associated with true tracks");
   G__memvar_setup((void*)(&cMRDSubEvent::fillstaticmembers),103,0,0,-1,G__defined_typename("Bool_t"),-2,1,"fillstaticmembers=",0,(char*)NULL);
   G__memvar_setup((void*)(&cMRDSubEvent::imgcanvas),85,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TCanvas),-1,-2,1,"imgcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)(&cMRDSubEvent::titleleft),85,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TText),-1,-2,1,"titleleft=",0,(char*)NULL);
   G__memvar_setup((void*)(&cMRDSubEvent::titleright),85,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TText),-1,-2,1,"titleright=",0,(char*)NULL);
   G__memvar_setup((void*)(&cMRDSubEvent::paddlepointers),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETBoxmUcOallocatorlETBoxmUgRsPgR),G__defined_typename("vector<TBox*>"),-2,1,"paddlepointers=",0,(char*)NULL);
   G__memvar_setup((void*)(&cMRDSubEvent::aspectrumv),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-2,1,"aspectrumv=",0,(char*)NULL);
   G__memvar_setup((void*)(&cMRDSubEvent::colorhexes),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-2,1,"colorhexes=",0,(char*)NULL);
   G__memvar_setup((void*)(&cMRDSubEvent::trackcolours),117,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEEColorcOallocatorlEEColorgRsPgR),G__defined_typename("vector<EColor>"),-2,1,"trackcolours=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MRDSpecs */
static void G__setup_memvarMRDSpecs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_MRDSpecs));
   {
   G__memvar_setup((void*)(&MRDSpecs::numpaddlesperpanelv),105,0,1,-1,-1,-1,1,"numpaddlesperpanelv=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::numpaddlesperpanelh),105,0,1,-1,-1,-1,1,"numpaddlesperpanelh=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::numhpanels),105,0,1,-1,-1,-1,1,"numhpanels=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::numvpanels),105,0,1,-1,-1,-1,1,"numvpanels=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::numpanels),105,0,1,-1,-1,-1,1,"numpanels=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::numplates),105,0,1,-1,-1,-1,1,"numplates=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::scintfullxlen),100,0,1,-1,-1,-1,1,"scintfullxlen=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::scintfullzlen),100,0,1,-1,-1,-1,1,"scintfullzlen=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::scinthfullylen),100,0,1,-1,-1,-1,1,"scinthfullylen=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::scintvfullylen),100,0,1,-1,-1,-1,1,"scintvfullylen=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::numalustructs),105,0,1,-1,-1,-1,1,"numalustructs=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::numvetopaddles),105,0,1,-1,-1,-1,1,"numvetopaddles=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::vetopaddlesperpanel),105,0,1,-1,-1,-1,1,"vetopaddlesperpanel=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::steelfullxlen),100,0,1,-1,-1,-1,1,"steelfullxlen=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::steelfullylen),100,0,1,-1,-1,-1,1,"steelfullylen=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::steelfullzlen),100,0,1,-1,-1,-1,1,"steelfullzlen=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::scinttapfullwidth),100,0,1,-1,-1,-1,1,"scinttapfullwidth=",0,"width of the scintilling taper at the narrow end");
   G__memvar_setup((void*)(&MRDSpecs::scinttapfullheight),100,0,1,-1,-1,-1,1,"scinttapfullheight=",0,"z length of tapering part of scint paddles.");
   G__memvar_setup((void*)(&MRDSpecs::scintlgfullwidth),100,0,1,-1,-1,-1,1,"scintlgfullwidth=",0,"tapered light guides at narrow end");
   G__memvar_setup((void*)(&MRDSpecs::scintlgfullheight),100,0,1,-1,-1,-1,1,"scintlgfullheight=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::alufullxlen),100,0,1,-1,-1,-1,1,"alufullxlen=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::alufullylen),100,0,1,-1,-1,-1,1,"alufullylen=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::alufullzlen),100,0,1,-1,-1,-1,1,"alufullzlen=",0,"TODO: check this with measurement");
   G__memvar_setup((void*)(&MRDSpecs::alufullxthickness),100,0,1,-1,-1,-1,1,"alufullxthickness=",0,"TODO: check this with measurement");
   G__memvar_setup((void*)(&MRDSpecs::alufullythickness),100,0,1,-1,-1,-1,1,"alufullythickness=",0,"TODO:  \" \"");
   G__memvar_setup((void*)(&MRDSpecs::windowwidth),100,0,1,-1,-1,-1,1,"windowwidth=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::windowheight),100,0,1,-1,-1,-1,1,"windowheight=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::scintbordergap),100,0,1,-1,-1,-1,1,"scintbordergap=",0,"gap between each scintillator (cm) to account for cladding etc");
   G__memvar_setup((void*)(&MRDSpecs::steelscintgap),100,0,1,-1,-1,-1,1,"steelscintgap=",0,"gap between steel and scintillator");
   G__memvar_setup((void*)(&MRDSpecs::scintalugap),100,0,1,-1,-1,-1,1,"scintalugap=",0,"gap between scintillator and alu struct");
   G__memvar_setup((void*)(&MRDSpecs::alusteelgap),100,0,1,-1,-1,-1,1,"alusteelgap=",0,"gap between alu struct and subsequent steel of next layer");
   G__memvar_setup((void*)(&MRDSpecs::layergap),100,0,1,-1,-1,-1,1,"layergap=",0,"total gaps between layers");
   G__memvar_setup((void*)(&MRDSpecs::nothickness),100,0,1,-1,-1,-1,1,"nothickness=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::mrdZlen),100,0,1,-1,-1,-1,1,"mrdZlen=",0,"TODO reconcile this with MRD_depth");
   G__memvar_setup((void*)(&MRDSpecs::tankouterRadius),100,0,1,-1,-1,-1,1,"tankouterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::MRDPMTExposeHeight),100,0,1,-1,-1,-1,1,"MRDPMTExposeHeight=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::MRDPMTRadius),100,0,1,-1,-1,-1,1,"MRDPMTRadius=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::mrdpmtfullheight),100,0,1,-1,-1,-1,1,"mrdpmtfullheight=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::widths),100,0,1,-1,-1,-1,1,"widths[]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::heights),100,0,1,-1,-1,-1,1,"heights[]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::maxwidth),100,0,1,-1,-1,-1,1,"maxwidth=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::maxheight),100,0,1,-1,-1,-1,1,"maxheight=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::nummrdpmts),105,0,1,-1,-1,-1,1,"nummrdpmts=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::layeroffsets),117,0,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"layeroffsets=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::MRD_width),102,0,1,-1,-1,-1,1,"MRD_width=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::MRD_height),102,0,1,-1,-1,-1,1,"MRD_height=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::MRD_layer2),102,0,1,-1,-1,-1,1,"MRD_layer2=",0,"position in wcsim coords of second scint layer in cm");
   G__memvar_setup((void*)(&MRDSpecs::MRD_start),102,0,1,-1,-1,-1,1,"MRD_start=",0,"position in wcsim coord of MRD front face in cm");
   G__memvar_setup((void*)(&MRDSpecs::MRD_depth),102,0,1,-1,-1,-1,1,"MRD_depth=",0,"total depth of the MRD in cm");
   G__memvar_setup((void*)(&MRDSpecs::MRD_end),102,0,1,-1,-1,-1,1,"MRD_end=",0,"end of the MRD in cm");
   G__memvar_setup((void*)(&MRDSpecs::MRD_steel_width),102,0,1,-1,-1,-1,1,"MRD_steel_width=",0,"half width of steel in cm");
   G__memvar_setup((void*)(&MRDSpecs::MRD_steel_height),102,0,1,-1,-1,-1,1,"MRD_steel_height=",0,"half height of steel in cm");
   G__memvar_setup((void*)(&MRDSpecs::mrdscintlayers),117,0,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"mrdscintlayers=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::tank_start),102,0,1,-1,-1,-1,1,"tank_start=",0,"front face of the tank in cm");
   G__memvar_setup((void*)(&MRDSpecs::tank_radius),102,0,1,-1,-1,-1,1,"tank_radius=",0,"tank radius in cm");
   G__memvar_setup((void*)(&MRDSpecs::tank_halfheight),102,0,1,-1,-1,-1,1,"tank_halfheight=",0,"tank half height in cm");
   G__memvar_setup((void*)(&MRDSpecs::tank_yoffset),102,0,1,-1,-1,-1,1,"tank_yoffset=",0,"tank y offset in cm");
   G__memvar_setup((void*)(&MRDSpecs::paddle_orientations),117,1,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"paddle_orientations=",0,"H is 0, V is 1");
   G__memvar_setup((void*)(&MRDSpecs::paddle_layers),117,1,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"paddle_layers=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::paddle_originx),117,1,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"paddle_originx=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::paddle_originy),117,1,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"paddle_originy=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::paddle_originz),117,1,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"paddle_originz=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::paddle_extentsx),117,1,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),G__defined_typename("vector<std::pair<double,double> >"),-1,1,"paddle_extentsx=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::paddle_extentsy),117,1,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),G__defined_typename("vector<std::pair<double,double> >"),-1,1,"paddle_extentsy=",0,(char*)NULL);
   G__memvar_setup((void*)(&MRDSpecs::paddle_extentsz),117,1,1,G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),G__defined_typename("vector<std::pair<double,double> >"),-1,1,"paddle_extentsz=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarFindMrdTracks_RootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmrdcluster(void) {
   /* mrdcluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcluster));
   G__memfunc_setup("AddDigit",762,G__FindMrdTracks_RootDict_168_0_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - digitindexin i - - 0 - pmtidin "
"d - - 0 - timein", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentreIndex",1401,G__FindMrdTracks_RootDict_168_0_2, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__FindMrdTracks_RootDict_168_0_3, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmin",700,G__FindMrdTracks_RootDict_168_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentre",897,G__FindMrdTracks_RootDict_168_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__FindMrdTracks_RootDict_168_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mrdcluster",1093,G__FindMrdTracks_RootDict_168_0_7, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcluster), -1, 0, 4, 1, 1, 0, 
"i - - 0 - digitindexin i - - 0 - pmtidin "
"i - - 0 - layerin d - - 0 - timein", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mrdcluster",1093,G__FindMrdTracks_RootDict_168_0_8, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("mrdcluster", 1093, G__FindMrdTracks_RootDict_168_0_9, (int) ('i'), G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcluster), -1, 0, 1, 1, 1, 0, "u 'mrdcluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~mrdcluster", 1219, G__FindMrdTracks_RootDict_168_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FindMrdTracks_RootDict_168_0_11, (int) ('u'), G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcluster), -1, 1, 1, 1, 1, 0, "u 'mrdcluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmrdcell(void) {
   /* mrdcell */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell));
   G__memfunc_setup("IncrementStatus",1577,G__FindMrdTracks_RootDict_173_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClusterAddresses",1964,G__FindMrdTracks_RootDict_173_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<mrdcluster,allocator<mrdcluster> >' 'vector<mrdcluster>' 1 - trackclusters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mrdcell",739,G__FindMrdTracks_RootDict_173_0_3, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell), -1, 0, 2, 1, 1, 0, 
"U 'mrdcluster' - 0 - startcluster U 'mrdcluster' - 0 - endcluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mrdcell",739,G__FindMrdTracks_RootDict_173_0_4, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell), -1, 0, 2, 1, 1, 0, 
"u 'mrdcell' - 11 - cellin i - - 0 - cellidin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mrdcell",739,G__FindMrdTracks_RootDict_173_0_5, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("mrdcell", 739, G__FindMrdTracks_RootDict_173_0_6, (int) ('i'), G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_mrdcell), -1, 0, 1, 1, 1, 0, "u 'mrdcell' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~mrdcell", 865, G__FindMrdTracks_RootDict_173_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunccMRDTrack(void) {
   /* cMRDTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack));
   G__memfunc_setup("GetTrackID",930,G__FindMrdTracks_RootDict_174_0_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTankTrackID",1328,G__FindMrdTracks_RootDict_174_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFile",672,G__FindMrdTracks_RootDict_174_0_3, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__FindMrdTracks_RootDict_174_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__FindMrdTracks_RootDict_174_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMrdSubEventID",1532,G__FindMrdTracks_RootDict_174_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigger",1012,G__FindMrdTracks_RootDict_174_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDigits",1204,G__FindMrdTracks_RootDict_174_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumLayersHit",1509,G__FindMrdTracks_RootDict_174_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPMTsHit",1241,G__FindMrdTracks_RootDict_174_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitIds",1073,G__FindMrdTracks_RootDict_174_0_11, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitQs",981,G__FindMrdTracks_RootDict_174_0_12, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitTs",984,G__FindMrdTracks_RootDict_174_0_13, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigiNumPhots",1499,G__FindMrdTracks_RootDict_174_0_14, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigiPhotTs",1279,G__FindMrdTracks_RootDict_174_0_15, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigiPhotParents",1813,G__FindMrdTracks_RootDict_174_0_16, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayersHit",1205,G__FindMrdTracks_RootDict_174_0_17, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTsHit",937,G__FindMrdTracks_RootDict_174_0_18, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdeps",785,G__FindMrdTracks_RootDict_174_0_19, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKEStart",958,G__FindMrdTracks_RootDict_174_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKEEnd",711,G__FindMrdTracks_RootDict_174_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalEdep",1186,G__FindMrdTracks_RootDict_174_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticlePID",1329,G__FindMrdTracks_RootDict_174_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackAngle",1276,G__FindMrdTracks_RootDict_174_0_24, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackAngleError",1798,G__FindMrdTracks_RootDict_174_0_25, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleAndOffset",1665,G__FindMrdTracks_RootDict_174_0_26, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tracktype d - - 1 - xgradient "
"d - - 1 - ygradient d - - 1 - xoffset "
"d - - 1 - yoffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateCovariantError",2367,G__FindMrdTracks_RootDict_174_0_27, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR), -1, 0, 4, 1, 1, 0, 
"d - - 0 - errorx i - - 0 - indexgiven "
"u 'TMatrixTSym<double>' 'TMatrixDSym' 0 - covariancematrix g - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateCovariantError",2367,G__FindMrdTracks_RootDict_174_0_28, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - errorx i - - 0 - indexgiven "
"u 'TMatrixTSym<double>' 'TMatrixDSym' 0 - covariancematrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMrdEntryPoint",1631,G__FindMrdTracks_RootDict_174_0_29, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMrdEntryBoundsX",1816,G__FindMrdTracks_RootDict_174_0_30, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMrdEntryBoundsY",1817,G__FindMrdTracks_RootDict_174_0_31, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInterceptsTank",1743,G__FindMrdTracks_RootDict_174_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTankExitPoint",1618,G__FindMrdTracks_RootDict_174_0_33, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartTime",1213,G__FindMrdTracks_RootDict_174_0_34, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartVertex",1452,G__FindMrdTracks_RootDict_174_0_35, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStopVertex",1348,G__FindMrdTracks_RootDict_174_0_36, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackLength",1399,G__FindMrdTracks_RootDict_174_0_37, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyLoss",1323,G__FindMrdTracks_RootDict_174_0_38, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyLossError",1845,G__FindMrdTracks_RootDict_174_0_39, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsPenetrating",1629,G__FindMrdTracks_RootDict_174_0_40, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsStopped",1211,G__FindMrdTracks_RootDict_174_0_41, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsSideExit",1275,G__FindMrdTracks_RootDict_174_0_42, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProjectionLimits",1967,G__FindMrdTracks_RootDict_174_0_43, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - zplane d - - 1 - xmax "
"d - - 1 - xmin d - - 1 - ymax "
"d - - 1 - ymin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProjectedPoint",1738,G__FindMrdTracks_RootDict_174_0_44, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3), -1, 0, 1, 1, 1, 0, "d - - 0 - zplane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPenetrationDepth",1950,G__FindMrdTracks_RootDict_174_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHtrackOrigin",1509,G__FindMrdTracks_RootDict_174_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHtrackOriginError",2031,G__FindMrdTracks_RootDict_174_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHtrackGradient",1707,G__FindMrdTracks_RootDict_174_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHtrackGradientError",2229,G__FindMrdTracks_RootDict_174_0_49, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHtrackFitChi2",1510,G__FindMrdTracks_RootDict_174_0_50, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHtrackFitCov",1480,G__FindMrdTracks_RootDict_174_0_51, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtrackOrigin",1523,G__FindMrdTracks_RootDict_174_0_52, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtrackOriginError",2045,G__FindMrdTracks_RootDict_174_0_53, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtrackGradient",1721,G__FindMrdTracks_RootDict_174_0_54, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtrackGradientError",2243,G__FindMrdTracks_RootDict_174_0_55, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtrackFitChi2",1524,G__FindMrdTracks_RootDict_174_0_56, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtrackFitCov",1494,G__FindMrdTracks_RootDict_174_0_57, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestCovarianceErrorCalc",2328,G__FindMrdTracks_RootDict_174_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawReco",791,G__FindMrdTracks_RootDict_174_0_59, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TCanvas' - 0 - imgcanvas u 'vector<TArrow*,allocator<TArrow*> >' 'vector<TArrow*>' 1 - trackarrows "
"i 'EColor' - 0 - thistrackscolour u 'vector<TBox*,allocator<TBox*> >' 'vector<TBox*>' 0 - paddlepointers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFit",689,G__FindMrdTracks_RootDict_174_0_60, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TCanvas' - 0 - imgcanvas u 'vector<TArrow*,allocator<TArrow*> >' 'vector<TArrow*>' 1 - trackfitarrows "
"i 'EColor' - 0 - thistrackscolour", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__FindMrdTracks_RootDict_174_0_61, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print2",575,G__FindMrdTracks_RootDict_174_0_62, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTrackID",1346,G__FindMrdTracks_RootDict_174_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTankTrack",1199,G__FindMrdTracks_RootDict_174_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - trackidin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrackPoint",1288,G__FindMrdTracks_RootDict_174_0_65, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 0 - pointposition u 'TVector3' - 0 - pointerror", "add a point from bonsai, or other external position constraint", (void*) NULL, 0);
   G__memfunc_setup("DoReconstruction",1685,G__FindMrdTracks_RootDict_174_0_66, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTankIntercept",1818,G__FindMrdTracks_RootDict_174_0_67, 103, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - htrackgradientin d - - 0 - vtrackgradientin "
"d - - 0 - htrackoriginin d - - 0 - vtrackoriginin "
"U 'TVector3' - 0 - solution1 U 'TVector3' - 0 - solution2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTankIntercept",1818,G__FindMrdTracks_RootDict_174_0_68, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'TVector3' - 0 - entrypoint U 'TVector3' - 0 - exitpoint "
"i - - 0 - tracktype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClosestApproach",1835,G__FindMrdTracks_RootDict_174_0_69, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 0 - pointin i - - 0 - tracktype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClosestPoint",1543,G__FindMrdTracks_RootDict_174_0_70, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TVector3), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 0 - origin i - - 0 - tracktype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoTGraphErrorsFit",1689,G__FindMrdTracks_RootDict_174_0_71, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckIfStopping",1505,G__FindMrdTracks_RootDict_174_0_72, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateEnergyLoss",1945,G__FindMrdTracks_RootDict_174_0_73, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cMRDTrack",827,G__FindMrdTracks_RootDict_174_0_74, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cMRDTrack",827,G__FindMrdTracks_RootDict_174_0_75, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack), -1, 0, 17, 1, 1, 0, 
"i - 'Int_t' 0 - mrdtrackidin u 'string' - 0 - wcsimefilein "
"i - 'Int_t' 0 - runidin i - 'Int_t' 0 - eventidin "
"i - 'Int_t' 0 - subeventidin i - 'Int_t' 0 - triggerin "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - digitidsin u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - digittubesin "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - digitqsin u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - digittimesin "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - digitnumphotsin u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - digitstruetimesin "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - digitsparentsin u 'vector<mrdcell,allocator<mrdcell> >' 'vector<mrdcell>' 0 - htrackcellsin "
"u 'vector<mrdcell,allocator<mrdcell> >' 'vector<mrdcell>' 0 - vtrackcellsin u 'vector<mrdcluster,allocator<mrdcluster> >' 'vector<mrdcluster>' 0 - htrackclustersin "
"u 'vector<mrdcluster,allocator<mrdcluster> >' 'vector<mrdcluster>' 0 - vtrackclustersin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cMRDTrack",827,G__FindMrdTracks_RootDict_174_0_76, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDTrack), -1, 0, 1, 1, 1, 0, "u 'cMRDTrack' - 41 - trackin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FindMrdTracks_RootDict_174_0_77, 85, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&cMRDTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FindMrdTracks_RootDict_174_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&cMRDTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FindMrdTracks_RootDict_174_0_79, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&cMRDTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FindMrdTracks_RootDict_174_0_80, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&cMRDTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FindMrdTracks_RootDict_174_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FindMrdTracks_RootDict_174_0_85, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&cMRDTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FindMrdTracks_RootDict_174_0_86, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&cMRDTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FindMrdTracks_RootDict_174_0_87, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&cMRDTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FindMrdTracks_RootDict_174_0_88, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&cMRDTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~cMRDTrack", 953, G__FindMrdTracks_RootDict_174_0_89, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfunccMRDSubEvent(void) {
   /* cMRDSubEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent));
   G__memfunc_setup("GetSubEventID",1241,G__FindMrdTracks_RootDict_183_0_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFile",672,G__FindMrdTracks_RootDict_183_0_2, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__FindMrdTracks_RootDict_183_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__FindMrdTracks_RootDict_183_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigger",1012,G__FindMrdTracks_RootDict_183_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDigits",1204,G__FindMrdTracks_RootDict_183_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumLayersHit",1509,G__FindMrdTracks_RootDict_183_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPMTsHit",1241,G__FindMrdTracks_RootDict_183_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitIds",1073,G__FindMrdTracks_RootDict_183_0_9, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitQs",981,G__FindMrdTracks_RootDict_183_0_10, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigitTs",984,G__FindMrdTracks_RootDict_183_0_11, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigiNumPhots",1499,G__FindMrdTracks_RootDict_183_0_12, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigiPhotTs",1279,G__FindMrdTracks_RootDict_183_0_13, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDigiPhotParents",1813,G__FindMrdTracks_RootDict_183_0_14, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayersHit",1205,G__FindMrdTracks_RootDict_183_0_15, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTsHit",937,G__FindMrdTracks_RootDict_183_0_16, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTrackVertices",2042,G__FindMrdTracks_RootDict_183_0_17, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR), G__defined_typename("vector<std::pair<TVector3,TVector3> >"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTrackPdgs",1603,G__FindMrdTracks_RootDict_183_0_18, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTracks",904,G__FindMrdTracks_RootDict_183_0_19, 85, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgR), G__defined_typename("vector<cMRDTrack>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdeps",785,G__FindMrdTracks_RootDict_183_0_20, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackArrows",1427,G__FindMrdTracks_RootDict_183_0_21, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR), G__defined_typename("vector<TArrow*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTrackArrows",1843,G__FindMrdTracks_RootDict_183_0_22, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR), G__defined_typename("vector<TArrow*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackFitArrows",1718,G__FindMrdTracks_RootDict_183_0_23, 117, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR), G__defined_typename("vector<TArrow*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__FindMrdTracks_RootDict_183_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", "print the subevent info.", (void*) NULL, 0);
   G__memfunc_setup("DoReconstruction",1685,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"g - - 0 - printtracks g - - 0 - drawcells "
"g - - 0 - drawfit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LeastSquaresMinimizer",2193,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 8, 1, 4, 0, 
"i - 'Int_t' 0 - numdatapoints D - 'Double_t' 0 - datapointxs "
"D - 'Double_t' 0 - datapointys D - 'Double_t' 0 - datapointweights "
"D - 'Double_t' 0 - errorys d - 'Double_t' 1 - fit_gradient "
"d - 'Double_t' 1 - fit_offset d - 'Double_t' 1 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BridgeSearch",1187,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 4, 0, 
"u 'vector<mrdcell*,allocator<mrdcell*> >' 'vector<mrdcell*>' 11 - tracktotest u 'vector<pair<int,int>,allocator<pair<int,int> > >' 'vector<std::pair<int,int> >' 11 - matchedtracks "
"u 'vector<vector<mrdcell*,allocator<mrdcell*> >,allocator<vector<mrdcell*,allocator<mrdcell*> > > >' 'vector<std::vector<mrdcell*> >' 11 - allpaddletracks u 'string' - 10 - horv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SearchForClusterInTracks",2430,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 4, 0, 
"u 'vector<pair<int,int>,allocator<pair<int,int> > >' 'vector<std::pair<int,int> >' 11 - matchedtracks u 'vector<vector<mrdcell*,allocator<mrdcell*> >,allocator<vector<mrdcell*,allocator<mrdcell*> > > >' 'vector<std::vector<mrdcell*> >' 11 - allpaddletracks "
"u 'vector<mrdcell*,allocator<mrdcell*> >' 'vector<mrdcell*>' 10 - tracktotest u 'string' - 10 - horv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillStaticMembers",1722,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cMRDSubEvent",1138,G__FindMrdTracks_RootDict_183_0_30, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cMRDSubEvent",1138,G__FindMrdTracks_RootDict_183_0_31, 105, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent), -1, 0, 14, 1, 1, 0, 
"i - 'Int_t' 0 - mrdsubevent_idin u 'string' - 0 - wcsimefilein "
"i - 'Int_t' 0 - runidin i - 'Int_t' 0 - eventidin "
"i - 'Int_t' 0 - triggerin u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - digitidsin "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - digittubesin u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - digitqsin "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - digittimesin u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - digitnumphotsin "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - digitstruetimesin u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - digitsparentsin "
"u 'vector<pair<TVector3,TVector3>,allocator<pair<TVector3,TVector3> > >' 'vector<std::pair<TVector3,TVector3> >' 0 - truetrackverticesin u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - truetrackpdgsin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawMrdCanvases",1509,G__FindMrdTracks_RootDict_183_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawTrueTracks",1430,G__FindMrdTracks_RootDict_183_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawTracks",1014,G__FindMrdTracks_RootDict_183_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputePaddleTransformation",2814,G__FindMrdTracks_RootDict_183_0_35, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 10 - copyNo u 'TVector3' - 1 - origin "
"g - 'Bool_t' 1 - ishpaddle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveArrows",1260,G__FindMrdTracks_RootDict_183_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__FindMrdTracks_RootDict_183_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FindMrdTracks_RootDict_183_0_38, 85, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&cMRDSubEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FindMrdTracks_RootDict_183_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&cMRDSubEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FindMrdTracks_RootDict_183_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&cMRDSubEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FindMrdTracks_RootDict_183_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&cMRDSubEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FindMrdTracks_RootDict_183_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FindMrdTracks_RootDict_183_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&cMRDSubEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FindMrdTracks_RootDict_183_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&cMRDSubEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FindMrdTracks_RootDict_183_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&cMRDSubEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FindMrdTracks_RootDict_183_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&cMRDSubEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("cMRDSubEvent", 1138, G__FindMrdTracks_RootDict_183_0_50, (int) ('i'), G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_cMRDSubEvent), -1, 0, 1, 1, 1, 0, "u 'cMRDSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~cMRDSubEvent", 1264, G__FindMrdTracks_RootDict_183_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMRDSpecs(void) {
   /* MRDSpecs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FindMrdTracks_RootDictLN_MRDSpecs));
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncFindMrdTracks_RootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalFindMrdTracks_RootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcFindMrdTracks_RootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__FindMrdTracks_RootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_EColor = { "EColor" , 101 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_mrdcluster = { "mrdcluster" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_mrdcell = { "mrdcell" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_cMRDTrack = { "cMRDTrack" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_cMRDSubEvent = { "cMRDSubEvent" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR = { "vector<pair<TVector3,TVector3>,allocator<pair<TVector3,TVector3> > >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<TVector3,TVector3>,allocator<pair<TVector3,TVector3> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgR = { "vector<cMRDTrack,allocator<cMRDTrack> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<cMRDTrack,allocator<cMRDTrack> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR = { "vector<TArrow*,allocator<TArrow*> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETArrowmUcOallocatorlETArrowmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArrow*,allocator<TArrow*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgR = { "vector<mrdcell*,allocator<mrdcell*> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<mrdcell*,allocator<mrdcell*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "vector<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,int>,allocator<pair<int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgR = { "vector<vector<mrdcell*,allocator<mrdcell*> >,allocator<vector<mrdcell*,allocator<mrdcell*> > > >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<mrdcell*,allocator<mrdcell*> >,allocator<vector<mrdcell*,allocator<mrdcell*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlETBoxmUcOallocatorlETBoxmUgRsPgR = { "vector<TBox*,allocator<TBox*> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETBoxmUcOallocatorlETBoxmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TBox*,allocator<TBox*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEEColorcOallocatorlEEColorgRsPgR = { "vector<EColor,allocator<EColor> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEEColorcOallocatorlEEColorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<EColor,allocator<EColor> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_pairlEmrdclustermUcOmrdclustermUgR = { "pair<mrdcluster*,mrdcluster*>" , 115 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEmrdclustercOallocatorlEmrdclustergRsPgR = { "vector<mrdcluster,allocator<mrdcluster> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdclustercOallocatorlEmrdclustergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<mrdcluster,allocator<mrdcluster> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_MRDSpecs = { "MRDSpecs" , 110 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR = { "vector<pair<double,double>,allocator<pair<double,double> > >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<double,double>,allocator<pair<double,double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_vectorlEmrdcellcOallocatorlEmrdcellgRsPgR = { "vector<mrdcell,allocator<mrdcell> >" , 99 , -1 };
G__linked_taginfo G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellcOallocatorlEmrdcellgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<mrdcell,allocator<mrdcell> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableFindMrdTracks_RootDict() {
  G__FindMrdTracks_RootDictLN_TClass.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TBuffer.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMemberInspector.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TObject.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_EColor.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_string.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_mrdcluster.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_mrdcell.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_cMRDTrack.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TCanvas.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TVector3.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TText.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_cMRDSubEvent.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETArrowmUcOallocatorlETArrowmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlETBoxmUcOallocatorlETBoxmUgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETBoxmUcOallocatorlETBoxmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEEColorcOallocatorlEEColorgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEEColorcOallocatorlEEColorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_pairlEmrdclustermUcOmrdclustermUgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEmrdclustercOallocatorlEmrdclustergRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdclustercOallocatorlEmrdclustergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_MRDSpecs.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_TF1.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_vectorlEmrdcellcOallocatorlEmrdcellgRsPgR.tagnum = -1 ;
  G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellcOallocatorlEmrdcellgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableFindMrdTracks_RootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_EColor);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_string);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_mrdcluster),sizeof(mrdcluster),-1,296192,(char*)NULL,G__setup_memvarmrdcluster,G__setup_memfuncmrdcluster);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_mrdcell),sizeof(mrdcell),-1,296192,(char*)NULL,G__setup_memvarmrdcell,G__setup_memfuncmrdcell);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_cMRDTrack),sizeof(cMRDTrack),-1,325376,"INCREMENT VERSION NUM EVERY TIME CLASS MEMBERS CHANGE",G__setup_memvarcMRDTrack,G__setup_memfunccMRDTrack);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TText);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_cMRDSubEvent),sizeof(cMRDSubEvent),-1,324864,"INCREMENT VERSION NUM EVERY TIME CLASS MEMBERS CHANGE",G__setup_memvarcMRDSubEvent,G__setup_memfunccMRDSubEvent);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlETVector3cOTVector3gRcOallocatorlEpairlETVector3cOTVector3gRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEcMRDTrackcOallocatorlEcMRDTrackgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlETArrowmUcOallocatorlETArrowmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETArrowmUcOallocatorlETArrowmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRcOallocatorlEvectorlEmrdcellmUcOallocatorlEmrdcellmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlETBoxmUcOallocatorlETBoxmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlETBoxmUcOallocatorlETBoxmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEEColorcOallocatorlEEColorgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEEColorcOallocatorlEEColorgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_pairlEmrdclustermUcOmrdclustermUgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEmrdclustercOallocatorlEmrdclustergRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdclustercOallocatorlEmrdclustergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_MRDSpecs),0,-1,262144,(char*)NULL,G__setup_memvarMRDSpecs,G__setup_memfuncMRDSpecs);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_TF1);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_vectorlEmrdcellcOallocatorlEmrdcellgRsPgR);
   G__get_linked_tagnum_fwd(&G__FindMrdTracks_RootDictLN_reverse_iteratorlEvectorlEmrdcellcOallocatorlEmrdcellgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupFindMrdTracks_RootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupFindMrdTracks_RootDict()");
  G__set_cpp_environmentFindMrdTracks_RootDict();
  G__cpp_setup_tagtableFindMrdTracks_RootDict();

  G__cpp_setup_inheritanceFindMrdTracks_RootDict();

  G__cpp_setup_typetableFindMrdTracks_RootDict();

  G__cpp_setup_memvarFindMrdTracks_RootDict();

  G__cpp_setup_memfuncFindMrdTracks_RootDict();
  G__cpp_setup_globalFindMrdTracks_RootDict();
  G__cpp_setup_funcFindMrdTracks_RootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncFindMrdTracks_RootDict();
  return;
}
class G__cpp_setup_initFindMrdTracks_RootDict {
  public:
    G__cpp_setup_initFindMrdTracks_RootDict() { G__add_setup_func("FindMrdTracks_RootDict",(G__incsetup)(&G__cpp_setupFindMrdTracks_RootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initFindMrdTracks_RootDict() { G__remove_setup_func("FindMrdTracks_RootDict"); }
};
G__cpp_setup_initFindMrdTracks_RootDict G__cpp_setup_initializerFindMrdTracks_RootDict;

